#EXAMPLE OF USE: 2 arguments, the PDB file and the generated dataframe by LYS.py
#python PyMOL_and_LYS_input_dataframe.py /home/lys/Documents/New_genes_10_23_2017/FARSB.pdb /home/lys/Dropbox/THESIS/Proteins_under_study/FARSB_Positions_3
#!/usr/bin/env python

#MODULES IMPORT
import sys, os
import pymol
from pymol import cmd
from pymol.cgo import *
from pymol.vfont import plain
import ntpath
import pandas as pd #Windows users: I copy-paste the pandas,dateutil and pyltz folders from anaconda 2!! into the site-packages folder of pymol(only for temporary use, other wise it gets confused with the paths of the packages)
import numpy as np
from pandas import Series
from math import isnan

try:
  import readline #Linux
except ImportError:
  import pyreadline as readline #Windows
import rlcompleter

# autocompletion
readline.parse_and_bind('tab: complete')

# Set up Pymol environment: Change if the computer cannot find the path to pymol
# moddir='/opt/pymol-svn/modules'
# sys.path.insert(0, moddir)
# os.environ['PYMOL_PATH'] = os.path.join(moddir, 'pymol/pymol_path')

# pymol launching: quiet (-q), without GUI (-c) plus arguments from command line
#pymol.pymol_argv = ['pymol','-qc'] + sys.argv[1:]
pymol.pymol_argv = ['pymol','-q'] + sys.argv[1:]
pymol.finish_launching()


# Read User Input
Structure_path = os.path.abspath(sys.argv[1])
sname = ntpath.basename(Structure_path) #Extract the filename without the path
Dataframe_path = os.path.abspath(sys.argv[2]) #Dataframe generated by LYS.py


# Load Structures

pymol.cmd.load(Structure_path, sname)
pymol.cmd.disable("all") #toggles off the display of all currently visible representations of an object. It is the equivalent of deselecting the object
pymol.cmd.enable(sname)



def Colour_by_Selection(selection="all",
        Selected = "orange",
        Not ='grey50',
        Domain = 'lime',
        Selected_and_Domain = 'magenta',
        ):

  colors ={
   'Selected' : Selected,
   'Not' : Not,
   'Domain':Domain,
   'Selected_and_Domain': Selected_and_Domain
  }

  #Background Colours and residues shapes:
  cmd.bg_color('white')
  cmd.show_as('spheres', 'all')
  cmd.color('gray','all')

  #Rotation of the protein
  #cmd.rotate([0,1,0], angle = -80,selection = "all") # Commands to rotate the structures to visualize some specific side of the protein [x,y,z]
  #cmd.rotate([1, 0, 0], angle=210, selection="all") #-20 for HRT2B

  #Select and remove chains
  # cmd.select('chainA', 'chain A')
  # cmd.remove('chain A')

  ###Legend####
  cgo = []
  #Font size
  axes = [[5.0, 0.0, 0.0], [0.0, 5.0, 0.0], [0.0, 0.0, 5.0]] #Change the values if the protein does not quite fall into place
  #Legend placement
  cyl_text(cgo, plain, [70.0, 10.0, 80.0], '%s' % (sname.split('.')[0]), radius=0.7, color=[0.0, 0.0, 0.0], axes=axes) #x=60 for RIOK2, x=40 and z=60 for ROS1
  cyl_text(cgo, plain, [60.0, 0.0, 80.0], 'Positively Selected', radius=0.5, color=[1.0, 0.5, 0.0], axes=axes)
  cyl_text(cgo, plain, [60.0, -10.0, 80.0], 'Not selected', radius=0.5,color=[0.5, 0.5, 0.5], axes=axes)
  cyl_text(cgo, plain, [60.0, -20.0, 80.0], 'Functional Domain', radius=0.5, color=[0.5, 1.0, 0.5], axes=axes)
  cyl_text(cgo, plain, [60.0, -30.0, 80.0], 'Both', radius=0.5, color=[1.0, 0.0, 1.0], axes=axes)
  cmd.set("cgo_line_radius", 0.03) #0.03
  cmd.load_cgo(cgo, 'txt')

  #Zoom
  cmd.zoom("all",0.0) #Higher and positive values zoom  out, it accepts negative values

  #Read the dataframe and remove 'nan'
  Data = pd.read_csv(Dataframe_path, sep='\t')
  Data = Data[np.isfinite(Data['PDB_Position'])] #Remove the Residues that got 'nan' value in their equivalent positions
  position_phenotype_dict = Series(Data.Label.values, index=Data.PDB_Position).to_dict()
  #Colour the residues in the protein according to their label in the dataframe
  for key, value in position_phenotype_dict.items():
        print(int(key),value, colors[value])
        cmd.color(colors[value],'resi %s' % int(key)) #--------------->If it does not work probably it has to do with the Residues ID being wrong
        if value == 'Selected_and_Domain': #Label the alpha carbon from positions selected and in the domain
                print(key)
                #cmd.select('Both','resi %s' % int(key)) #Create a selection
                #cmd.label('Both and n. CA', '" %s %s" % (resn,resi)')
                cmd.label('resi %s and n. CA' % int(key), '" %s %s" % (resn,resi)')
                #cmd.label('resi %s' % int(key), '" %s %s" % (resn,resi)')



#Add the function to pymol and call it
cmd.extend("Colour_by_Selection",Colour_by_Selection)
Colour_by_Selection(sname)


print("Structure will be at %s" % (os.path.dirname(Structure_path)))
#Save the coloured protein image
pymol.cmd.png(os.path.dirname(Structure_path) + "/%s_PyMOL" % (sname))





